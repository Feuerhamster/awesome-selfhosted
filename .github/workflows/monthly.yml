name: Monthly Checks

on:
  schedule:
    - cron:  '* * 1 * *'
  workflow_dispatch:
    inputs:
      file:
        description: 'File to test'
        default: tests/README-test.md

jobs:
  create-issue:
    if: always()
    needs: [check_syntax, check_links, check_github_commit_dates]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: result          
      - name: Create Issue template
        run: |
          printf '%s\n%s%s %s\n%s\n%s\n' '---' 'title: Monthly Checks - ' $( date +"%B %Y" ) 'labels: automated issue' '---' > .github/ISSUE_TEMPLATE.md
          printf '%s/%s%s%s' ${GITHUB_SERVER_URL} ${GITHUB_REPOSITORY} '/actions/runs/' ${GITHUB_RUN_ID} >> .github/ISSUE_TEMPLATE.md
          echo -e \n***\n >> .github/ISSUE_TEMPLATE.md
          cat github_commit_dates.md >> .github/ISSUE_TEMPLATE.md || True
      - name: Verify template
        run: cat .github/ISSUE_TEMPLATE.md
      - name: create issue
        id: create-iss
        uses: buluma/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: 'echo Created issue number ${{ steps.create-iss.outputs.number }}'

  check_syntax:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Setup Checks
        run: |
          cd tests 
          npm install --silent chalk
          cd ..
      - name: Set env
        run: echo "FILE=${{ github.event.inputs.file || 'README.md' }}" >> $GITHUB_ENV; 
      - name: Checks
        run:
          script -e -c 'node tests/test.js -r ${{ env.FILE }}'  2>&1 | tee syntax-result.txt
      - name: upload awesome_bot results
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: syntax-result.txt

  check_links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 2.6
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.7
      - name: Setup Checks
        run: gem install awesome_bot
      - name: Set env
        run: echo "FILE=${{ github.event.inputs.file || 'README.md' }}" >> $GITHUB_ENV
      - name: Checks
        run: awesome_bot -f ${{ env.FILE }} --allow-redirect --allow 202,429 --white-list < tests/link_whitelist.txt || true
      - name: create result
        run: |
          egrep -o 'Found [0-9]* link issues' ab-results-tests-README-test.md-markdown-table.json > ab-result.txt
          egrep -o 'Line \| .*\n' ab-results-tests-README-test.md-markdown-table.json >> ab-result.txt
      - name: upload awesome_bot results
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: |
            ab-result.txt
            ab-results-tests-README-test.md-markdown-table.json
      
  check_github_commit_dates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Setup Checks
        run: pip3 install Requests
      - name: Set env
        run: echo "FILE=${{ github.event.inputs.file || 'README.md' }}" >> $GITHUB_ENV
      - name: Checks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python tests/check-github-commit-dates.py ${{ env.FILE }} || true
      - run: |
          export RESULT=$(<github_commit_dates.md)
          echo "::set-output name=result::RESULT"
      - name: Upload result
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: github_commit_dates.md
